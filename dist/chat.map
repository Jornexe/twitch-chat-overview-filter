{"version":3,"file":"chat.js","mappingssources":["webpack://twitch-chat-overview/./src/main/scriChat.js"],"sourcesContent":["console.log(\"YEEEEEEEEEEEET\", document.getElementById(\"altChatDiv\"));\r\ndocument.addEventListener(\"DOMContentLoaded\", loaded(), false);\r\nwindow.addEventListener(\"popstate\", loaded(), false);\r\nwindow.addEventListener(\"locationchange\", function () {\r\n    console.log(\"location changed!\");\r\n    console.log(\"works? ========\");\r\n});\r\n\r\n// fix the event so it calls when switching to another channel and not just on reload or first page load.\r\nfunction test() {\r\n    console.log(\"works? ========\");\r\n}\r\n// adds easier identification\r\nfunction loaded() {\r\n    console.log(\"LOADED CALLLED ----> \", document.readyState);\r\n    if (document.readyState === \"interactive\") {\r\n        if (document.getElementById(\"altChatDiv\") === null) {\r\n            console.log(\"YEEEEEEEEEEEEEE IT WOOOORSSSSSSSSSSSKKKK\");\r\n\r\n            // sets up id for copying chat to filter\r\n            document.querySelectorAll('[role=\"log\"]').forEach(function (x) {\r\n                x.setAttribute(\"id\", \"chatLogDefault\");\r\n            });\r\n            // creates filtered chat box\r\n            locate = document.getElementsByClassName(\"gzJAxw\");\r\n            altChatDiv = document.createElement(\"div\");\r\n            altChatDiv.setAttribute(\"id\", \"altChatDiv\");\r\n            altChatDiv.setAttribute(\r\n                \"style\",\r\n                \"height: 30%; position: relative; overflow-y: auto; overflow-x: hidden;\"\r\n            );\r\n            Array.prototype.forEach.call(locate, function (x) {\r\n                x.prepend(altChatDiv);\r\n            });\r\n            Array.prototype.forEach.call(\r\n                document.getElementsByClassName(\"ejGzhU\"),\r\n                function (x) {\r\n                    x.setAttribute(\"style\", \"height: 40% !important\");\r\n                }\r\n            );\r\n            // Auto scroll to bottom of altchat. should probably not be in \"loaded()\". not sure if it works or not.\r\n            // for (let i = 0; i < 100; i++) {\r\n            //     altChatDivId = document.getElementById(\"altChatDiv\");\r\n            //     altChatDivId.innerHTML += \"<p>SadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadgeSadge</p>\";\r\n            //     // altChatDivId.scrollTop = altChatDivId.scrollTop;\r\n            //     var isScrolledToBottom = altChatDivId.scrollHeight - altChatDivId.clientHeight <= altChatDivId.scrollTop + 1;\r\n            //     if(isScrolledToBottom){\r\n            //         altChatDivId.scrollTop = altChatDivId.scrollHeight - altChatDivId.clientHeight;\r\n            //     };\r\n            // };\r\n            // add this when data added. (would autoscroll on EVERY new message which would not be ideal)\r\n            //elem.scrollTop = elem.scrollHeight;\r\n\r\n            // allow 1px inaccuracy by adding 1\r\n\r\n            console.log(\"YEEEEEEEEEEEET\", document.getElementById(\"altChatDiv\"));\r\n        }\r\n    }\r\n}\r\nif (document.getElementById(\"chatLogDefault\") != \"undefined\" && document.getElementById(\"chatLogDefault\") != null) {\r\n    // easier use\r\n    altChatDivId = document.getElementById(\"altChatDiv\");\r\n    chatLogDefault = document.getElementById(\"chatLogDefault\");\r\n    // checks for new messages in chat\r\n    chatLogDefault.addEventListener(\"DOMNodeInserted\", function () {\r\n        // Gets all information about message\r\n        if (chatLogDefault.lastChild.lastChild != \"undefined\" && chatLogDefault.lastChild.lastChild != null) {\r\n            var child = chatLogDefault.lastChild.lastChild;\r\n            // ADD: user defined chat filter <--------------\r\n            chrome.storage.sync.get(\"vip\", z => {\r\n                // console.log(z);\r\n                // console.log(Object.values(z)[0]);\r\n                if (Object.values(z)[0] ){\r\n                    if(child.getElementsByClassName(\"chat-badge\").some(e => e.getAttribute(\"alt\") == \"VIP\")){\r\n                        console.log(\"VIP FOUND!\");\r\n                    }\r\n                    else return;\r\n                }\r\n            })\r\n            if (Object.values(chrome.storage.sync.get(\"vip\"))[0] ){\r\n                if(child.getElementsByClassName(\"chat-badge\").some(e => e.getAttribute(\"alt\") === \"VIP\")){\r\n                    console.log(\"VIP FOUND!\")\r\n                }\r\n                else return;\r\n            }\r\n            // ADD: user defined chat filter <--------------\r\n            // check if object is from a client.\r\n            if (child.getElementsByClassName(\"chat-author__display-name\")[0] != \"undefined\" && child.getElementsByClassName(\"chat-author__display-name\")[0] != null) {\r\n                var childName = child.getElementsByClassName(\"chat-author__display-name\")[0].textContent;\r\n                // class: seventv-message-context\r\n                // gets all message content\r\n                var childContent = \"\";\r\n                if (child.getElementsByClassName(\"seventv-message-context\") != \"undefined\" && child.getElementsByClassName(\"seventv-message-context\") != null) {\r\n                    for (let y of child.getElementsByClassName(\"seventv-message-context\")) {\r\n                        for (let x of y.children) {\r\n                            if (x.classList.contains(\"seventv-emote\")) {\r\n                                childContent += x.children[0].children[0].getAttribute(\"alt\");\r\n                            }\r\n                            else if (x.children[0] && x.children[0].nodeName == \"IMG\") {\r\n                                //console.log(\"IMG\", x)\r\n                                childContent += x.children[0].getAttribute(\"alt\");\r\n                            }\r\n                            else if (x.textContent) {\r\n                                childContent += x.textContent;\r\n                            }\r\n                            else {\r\n                                childContent += \"--\";\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (child.getElementsByClassName(\"chat-line__timestamp\")[0].textContent != null) {\r\n                    var childTStamp = child.getElementsByClassName(\"chat-line__timestamp\")[0].textContent;\r\n                }\r\n                else {\r\n                    var childTStamp = \"-NO-TIMESTAMP-\";\r\n                }\r\n            }\r\n        }\r\n        else return;\r\n        // Ensures that these variables actually exist\r\n        if (childName && childContent && childTStamp) {\r\n            // COPIES FROM MAIN CHAT TO FILTERED CHAT WINDOW\r\n            if (!document.getElementById(childName + childContent + childTStamp) && document.getElementById(childName + childContent + childTStamp) != childName + childContent + childTStamp) {\r\n                cchild = child.cloneNode(true);\r\n                cchild.setAttribute(\"id\", childName + childContent + childTStamp);\r\n                altChatDivId.appendChild(cchild);\r\n                updateScroll();\r\n                // Removes elements from altchat\r\n                if (altChatDivId.children.length >= 100) {\r\n                    altChatDivId.removeChild(altChatDivId.children[0]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n        false\r\n    );\r\n}\r\nfunction updateScroll() {\r\n    if (altChatDivId.scrollHeight - altChatDivId.clientHeight <= altChatDivId.scrollTop + 1){\r\n        altChatDivId.scrollTop = altChatDivId.scrollHeight;\r\n    }\r\n}\r\n\r\n// jCgbLy\r\n// gzJAxw\r\n// ejGzhU <- user message\r\n\r\n// jFfYcJ <- user badges\r\n"],"names":[],"sourceRoot":""}