{"version":3,"file":"chat.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://twitch-chat-overview/./src/main/scriChat.js"],"sourcesContent":["// import jquery from 'jquery';\r\n\r\n// console.log(\"YEEEEEEEEEEEET\", document.getElementById(\"altChatDiv\"));\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", function() {\r\n//     document.head.prepend(\"<link rel=\\\"stylesheet\\\" href=\\\"./assets/exstyle.css\\\">\");\r\n// }, false);\r\n\r\nsetInterval(function () { if (document.getElementById(\"altChatDiv\") === null) { loaded() } }, 5000);\r\n\r\n// fix the event so it calls when switching to another channel and not just on reload or first page load.\r\n\r\n// adds easier identification and creates dupe target.\r\nfunction loaded() {\r\n    console.log(\"LOADED CALLLED ----> \", document.readyState);\r\n    if (document.getElementById(\"altChatDiv\") === null) {\r\n        // sets up id for copying chat to filter\r\n        document.querySelectorAll('[role=\"log\"]').forEach(function (x) {\r\n            x.setAttribute(\"id\", \"chatLogDefault\");\r\n        });\r\n\r\n        // creates filtered chat box\r\n        locate = document.getElementsByClassName(\"chat-room__content\");\r\n        altChatDiv = document.createElement(\"div\");\r\n        altChatDiv.setAttribute(\"id\", \"altChatDiv\");\r\n        altChatDiv.setAttribute(\"class\", \"scrollbar-style-1\");\r\n        altChatDiv.setAttribute(\r\n            \"style\",\r\n            \"height: 30%; position: relative; overflow-y: auto; overflow-x: hidden; border-bottom: solid; border-color: gray;\"\r\n        );\r\n\r\n        Array.prototype.forEach.call(locate, function (x) {\r\n            x.prepend(altChatDiv);\r\n        });\r\n\r\n        // makes the alt chat visible and forces main chat to only take so much of the screen.\r\n        // ADD: user defined height\r\n        Array.prototype.forEach.call(\r\n            document.getElementsByClassName(\"chat-list--default\"),\r\n            function (x) {\r\n                x.setAttribute(\"id\", \"blockhidden\");\r\n                x.setAttribute(\"style\", \"height: 40% !important\");\r\n            }\r\n        );\r\n\r\n        // welcome message\r\n        welcome1 = document.createElement(\"span\");\r\n        welcome1.setAttribute(\"class\", \"CoreText-sc-cpl358-0 Layout-sc-nxg1ff-0 chat-line__status\");\r\n        if (document.getElementById(\"seventv\") == null) {\r\n            welcome1.innerHTML = \"Install <a href=\\\"https://chrome.google.com/webstore/detail/7tv/ammjkodgmmoknidbanneddgankgfejfh\\\">7TV chrome extension</a> for this to work\\n\";\r\n        }\r\n        else {\r\n            welcome1.innerHTML = \"Welcome to the filter!\";\r\n            console.log(\"YEEEEEEEEEEEET\", document.getElementById(\"altChatDiv\"));\r\n            setupListener();\r\n        }\r\n        altChatDiv.appendChild(welcome1);\r\n\r\n        // makes the leaderboard not be inbetween the chatboxes\r\n        let swapPos = setInterval(function () {\r\n            // console.log(\"next sibling to altChat\", document.getElementById(\"altChatDiv\").nextElementSibling.children[0].children[0].classList.contains(\"channel-leaderboard\"));\r\n            leaderboard = document.getElementById(\"altChatDiv\").nextElementSibling;\r\n            // console.log(\"swdfÃ¥poakswedfo\",leaderboard.children);\r\n            if (leaderboard.children.length != 0 && leaderboard.children[0].children[0].classList.contains(\"channel-leaderboard\")) {\r\n                console.log(\"Swapped Leaderboard Position\");\r\n                document.getElementById(\"altChatDiv\").parentNode.insertBefore(leaderboard, document.getElementById(\"altChatDiv\"));\r\n                clearInterval(swapPos)\r\n            }\r\n        }, 5000);\r\n    }\r\n}\r\n\r\n// add variable here after inserting it in options.html\r\n// var must have same name as id\r\n// temp variables\r\n\r\n// shows/hides the extension\r\nenabled = true;\r\n// checks for badges\r\nbroadcaster = true;\r\nvip = true;\r\nmod = true;\r\nverified = true;\r\nprime = true;\r\n// currently always true - prevents duplicate messages within the same timeframe.\r\nantiSpam = true;\r\n// not implemented\r\nsubbed = true;\r\nminsub = 999999999;\r\nminSubGift = true;\r\nminSubGiftAmount = 999999999;\r\n// working on - \r\nminCheerMsg = true;\r\nminCheerMsgAmount = 999999999;\r\n// not implemented\r\nminCheerBadge = true;\r\nminCheerBadgeAmount = 999999999;\r\n\r\n// updates local variables to match client settings on startup\r\nchrome.storage.sync.get(null, function (itemsOBJ) {\r\n    for (var storKey in itemsOBJ) {\r\n        if (itemsOBJ.hasOwnProperty(storKey)) {\r\n            // console.log(storKey, itemsOBJ[storKey]);\r\n            window[storKey] = itemsOBJ[storKey];\r\n        }\r\n    }\r\n    altChatVisibility(enabled);\r\n});\r\n\r\n// updates local variables when they are changed\r\nchrome.storage.onChanged.addListener(function (storag) {\r\n    console.log(\"=============????????\", storag);\r\n    window[Object.keys(storag)[0]] = Object.values(Object.values(storag)[0])[0];\r\n    console.log(Object.keys(storag)[0], \"updated to\", Object.values(Object.values(storag)[0])[0]);\r\n    if (Object.keys(storag)[0] == \"enabled\") {\r\n        altChatVisibility(Object.values(Object.values(storag)[0])[0]);\r\n    }\r\n});\r\n\r\nfunction altChatVisibility(bool) {\r\n    if (document.getElementById(\"altChatDiv\") != \"undefined\" && document.getElementById(\"altChatDiv\") != null) {\r\n        console.log(\"Visibility Toggled\")\r\n        if (bool) {\r\n            //document.getElementById(\"blockhidden\").style.height = \"40% !important\";\r\n            document.getElementById(\"blockhidden\").setAttribute(\"style\", \"height: 40% !important\");\r\n            document.getElementById(\"altChatDiv\").setAttribute(\"style\", \"height: 30%; position: relative; overflow-y: auto; overflow-x: hidden;\");\r\n        }\r\n        else {\r\n            // document.getElementById(\"blockhidden\").style.height = \"\";\r\n            document.getElementById(\"blockhidden\").setAttribute(\"style\", \"height: 100% !important\");\r\n            document.getElementById(\"altChatDiv\").setAttribute(\"style\", \"height: 0%; position: relative; overflow-y: auto; overflow-x: hidden;\");\r\n        }\r\n    }\r\n}\r\n\r\n// REWORKED NODE INSERTER\r\nfunction setupListener() {\r\n    // easier use\r\n    altChatDivId = document.getElementById(\"altChatDiv\");\r\n    chatLogDefault = document.getElementById(\"chatLogDefault\");\r\n    // checks for new messages in chat\r\n    chatLogDefault.addEventListener(\"DOMNodeInserted\", function (insertedNode) {\r\n        // Gets all information about message\r\n        // console.log(\"--->\", insertedNode, insertedNode.target.classList);\r\n        // WHAT THE ACTUAL FUCK WAS I THINKING\r\n        // imma need to rework whatever i did here.\r\n        // if (insertedNode.target.classList[0] == \"chat-line__message\") {\r\n        if (insertedNode.target.classList && insertedNode.target.classList.contains(\"chat-line__message\")) {\r\n            // console.log(\"Inserted Node Target\", insertedNode.target);\r\n            var child = insertedNode.target;\r\n            // ADD: user defined chat filter <--------------\r\n            var checkFilter = [];\r\n            if (vip || mod || verified || prime || broadcaster) {\r\n                for (let badges of child.getElementsByClassName(\"chat-badge\")) {\r\n                    arrTib = badges.getAttribute(\"alt\");\r\n                    if (arrTib == \"VIP\" && vip) {\r\n                        checkFilter.push(true);\r\n                    }\r\n                    else if (arrTib == \"Broadcaster\" && broadcaster) {\r\n                        checkFilter.push(true);\r\n                    }\r\n                    else if (arrTib == \"Moderator\" && mod) {\r\n                        checkFilter.push(true);\r\n                    }\r\n                    else if (arrTib == \"Verified\" && verified) {\r\n                        checkFilter.push(true);\r\n                    }\r\n                    else if (arrTib == \"Prime Gaming\" && prime) {\r\n                        checkFilter.push(true);\r\n                    }\r\n                    else checkFilter.push(false);\r\n                }\r\n                if (checkFilter.includes(true) || minCheerMsg) { } else return;\r\n\r\n                // // work out a method to filter these:\r\n                // subbed = true;\r\n                // minsub = 999999999;\r\n                // minSubGift = true;\r\n                // minSubGiftAmount = 999999999;\r\n                // minCheerMsg = true;\r\n                // minCheerMsgAmount = 999999999;\r\n                // minCheerBadge = true;\r\n                // minCheerBadgeAmount = 999999999;\r\n            }\r\n            // ADD: user defined chat filter <--------------\r\n\r\n            // check if object is from a client.\r\n            // console.log(\"zzxc\", child.getElementsByClassName(\"chat-author__display-name\")[0], \"--->\", child.getElementsByClassName(\"chat-author__display-name\")[0]);\r\n\r\n            var childName = child.getElementsByClassName(\"chat-author__display-name\")[0].textContent;\r\n            // class: seventv-message-context\r\n            // gets all message content\r\n            var childContent = \"\";\r\n            // console.log(\"seven\", child.getElementsByClassName(\"seventv-message-context\"), child.getElementsByClassName(\"seventv-message-context\")[0]);\r\n            // console.log(\"ChildObj\", child);\r\n            var messageContent;\r\n            if (child.children[0].children[1] != \"undefined\" && child.children[0].children[1] != null) {\r\n                messageContent = child.children[0].children[1].children[0].children[0].lastChild\r\n            }\r\n            else {\r\n                messageContent = child.children[0].children[0].children[0].children[0].lastChild\r\n            }\r\n            // console.log(\"msgCont\",messageContent)\r\n            for (let messageBit of messageContent.children) {\r\n                if (messageBit.classList.contains(\"seventv-emote\")) {\r\n                    if (minCheerMsg && messageBit.children[0].children[0].getAttribute(\"alt\") == \"Cheer\"\r\n                    && messageBit.children[0].children[1].innerHTML >= minCheerMsgAmount) {\r\n                        childContent += messageBit.children[0].children[0].getAttribute(\"alt\");\r\n                    }\r\n                    else if (minCheerMsg){\r\n                        return\r\n                    }\r\n                    else {\r\n                        childContent += messageBit.children[0].children[0].getAttribute(\"alt\");\r\n                    }\r\n                }\r\n                else if (messageBit.children[0] && messageBit.children[0].nodeName == \"IMG\") {\r\n                    //console.log(\"IMG\", x)\r\n                    childContent += messageBit.children[0].getAttribute(\"alt\");\r\n                }\r\n                else if (messageBit.textContent) {\r\n                    childContent += messageBit.textContent;\r\n                }\r\n                else {\r\n                    childContent += \"-EMPTY-\";\r\n                }\r\n            }\r\n            childContent = childContent.replace(\" \",\"\");\r\n            // console.log(\"childContent -currently disabled to expected empty-\",childContent);\r\n\r\n            // for some reason twitch decided to mix chat messages with usernames and everything else unlike what 7tv does to the messages.\r\n            // think imma just require 7tv to make all this easier.\r\n            // else if (child.getElementsByClassName(\"chat-line__no-background\") != \"undefined\" && child.getElementsByClassName(\"chat-line__no-background\") != null){\r\n            //     for (let y of child.getElementsByClassName(\"chat-line__no-background\")){\r\n            //         for (let x of y.lastChild.children){\r\n            //             // duplicate the obove seventv function to work without 7tv\r\n            //         }\r\n            //     }\r\n            // }\r\n            if (child.getElementsByClassName(\"chat-line__timestamp\")[0].textContent != null) {\r\n                var childTStamp = child.getElementsByClassName(\"chat-line__timestamp\")[0].textContent;\r\n            }\r\n            else {\r\n                var childTStamp = \"-NO-TIMESTAMP-\";\r\n            }\r\n\r\n        }\r\n        else return;\r\n        // Ensures that these variables actually exist\r\n        // console.log(childName, childContent, childTStamp);\r\n        // console.log(childContent);\r\n        if (childName && childContent && childTStamp) {\r\n            // COPIES FROM MAIN CHAT TO FILTERED CHAT WINDOW\r\n            if (!document.getElementById(childName + childContent + childTStamp)) {\r\n                cchild = child.cloneNode(true);\r\n                cchild.setAttribute(\"id\", childName + childContent + childTStamp);\r\n                altChatDivId.appendChild(cchild);\r\n                updateScroll();\r\n                // Removes elements from altchat\r\n                if (altChatDivId.children.length >= 100) {\r\n                    altChatDivId.removeChild(altChatDivId.children[0]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n        false\r\n    );\r\n\r\n}\r\n\r\n// needs rework\r\nfunction updateScroll() {\r\n    if (altChatDivId.scrollHeight - altChatDivId.clientHeight <= altChatDivId.scrollTop + 500) {\r\n        altChatDivId.scrollTop = altChatDivId.scrollHeight;\r\n    }\r\n}\r\n\r\n// checks if exists\r\nfunction doesExist(object) {\r\n    if (object && object != \"undefined\" && object != null) {\r\n        return true\r\n    }\r\n    else return false\r\n}\r\n\r\n"],"names":[],"sourceRoot":""}